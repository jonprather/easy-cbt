@tailwind base;
@tailwind components;
@tailwind utilities;
.min-h-90 {
  min-height: 90vh;
}
.min-h-80 {
  min-height: 80vh;
}
.min-h-73 {
  min-height: 73vh;
}
.min-h-70 {
  min-height: 70vh;
}
.min-h-60 {
  min-height: 60vh;
}
.min-h-50 {
  min-height: 50vh;
}
.min-h-40 {
  min-height: 40vh;
}

.min-w-10 {
  min-width: 2rem;
}

.layout {
  max-width: 1440px;
  margin: 0 auto;
}

.DialogOverlay {
  background-color: rgba(0, 0, 0, 0.5);
  position: fixed;
  inset: 0;
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.DialogContent {
  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw;

  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

.overlay {
  position: fixed; /* Sit on top of the page content */
  width: 100%; /* Full width (cover the whole page) */
  height: 100%; /* Full height (cover the whole page) */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(22, 22, 22, 0.25); /* Black background with opacity */
  z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
  cursor: pointer; /* Add a pointer on hover */
}

/* custom scrollbar */
::-webkit-scrollbar {
  width: 1.3em;
}

::-webkit-scrollbar-track {
  /* @apply bg-neutral; */
  border-radius: 10px;
  background-color: transparent;
}

::-webkit-scrollbar-thumb {
  @apply bg-secondary;

  border-radius: 20px;
  min-height: 36px;
  border: 6px solid transparent;
  background-clip: content-box;
}

::-webkit-scrollbar-thumb:hover {
  @apply bg-secondary-focus;
}

.CollapsibleContent {
  overflow: hidden;
}
.CollapsibleContent[data-state="open"] {
  animation: slideDown 300ms ease-out;
}
.CollapsibleContent[data-state="closed"] {
  animation: slideUp 300ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-collapsible-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-collapsible-content-height);
  }
  to {
    height: 0;
  }
}
