// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id               String             @id @default(cuid())
    name             String?
    email            String?            @unique
    emailVerified    DateTime?
    image            String?
    accounts         Account[]
    sessions         Session[]
    cBT_FormDataType cBT_FormDataType[]
}

// Add a delete cascade here for cbt

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// TODO update all the cases that use this or use the prisma type?
// ie update the controller and the clients code so that i can have accesss to this info in client
model cBT_FormDataType {
    createdAt         DateTime            @default(now())
    updatedAt         DateTime            @updatedAt
    id                String              @id @default(cuid())
    name              String?
    moodLabel         String?
    moodName          String?
    moodRating        Int?
    evidenceFor       String?
    evidenceAgainst   String?
    newThought        String?
    rateBelief        Int?
    rerateEmotion     Int?
    automaticThoughts AutomaticThoughts[]
    user              User                @relation(fields: [userId], references: [id])
    userId            String
}

model AutomaticThoughts {
    id                 String            @id @default(cuid())
    thought            String
    isHot              Boolean
    cBT_FormDataType   cBT_FormDataType? @relation(fields: [cBT_FormDataTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    cBT_FormDataTypeId String?
}
